###########################
テーマ活動
###########################


テーマの具体化
======================

当初はアプリケーションにの知識がないことから、まずはterasolunaチュートリアル、
AWSサービス利用チュートリアルを実施。
7月にもなってきたため、テーマについて具体化を行おうと思っています。
現在のテーマは、AWSマネージドサービスを活用したアプリケーションアーキテクチャの
検討・検証を通して、オンライン・バッチアプリケーションにおけるさまざまな設計パターンを整理し実装コードとして
まとめることをテーマとして挙げております。
具体化に際し、現状について整理しました。
AWS公式では以下の通り代表的なサーバレスアーキテクチャの構成がサンプルとして提供されている。

AWS公式「形で考えるサーバーレス設計」

https://aws.amazon.com/jp/serverless/patterns/serverless-pattern/


差別化を図るために、以下のアプローチを実施。

	**・サーバレスアーキテクチャの問題点を確認**

	**・自身と関わりが多い事例をテーマとして検討**



サーバレスアーキテクチャの問題点を確認
----------------------------------------------------------
（私の認識ですが）サーバレスアーキテクチャにおける問題点において、


自身と関わりが深い事例をテーマとして検討
----------------------------------------------------------


①.Netによるアプリケーション配信アプリケーションのリファクタリングパターン整理

現状：

Citrix Virtual Appsによるシンクライアント機能を用いて、webサーバの画面APにアクセス。
webサーバからAPサーバの業務ロジックを実行する。


業務ロジックは処理に応じてAurora１を参照・更新し、その結果を画面AP/Excelに返す。
端末からLB,citrixStorefrontサーバ、SBCサーバへ、バックエンドLBを通り、APサーバ、アプリケーションサーバの機能で負荷分散を実施している。

→

これの置き換えを検討したい
案としては以下が考えられる。

	・Citrix Virtual AppsにおけるAWS Appstream2.0に置き換え、実装を行う。

	・

②セッション管理をdynamoDBに置き換える
コンテナベースでの実装が可能か。

③バッチ処理をLambdaで実装



